slurm_log/
models/
slurm_scripts/

eval/RULER/docker
eval/RULER/scripts/benchmark_root
eval/RULER/scripts/data/synthetic/json/*json
.ipynb_checkpoints/
eval/RULER/__pycache__/
*.jsonl
eval/RULER/.vscode/
*.out
Block-Sparse-Attention/
xattn/scripts/
output/*
*.log

best_metric/
config/

xattn/scripts/

test_code/
*.egg-info/
*.pyc

# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation

docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# UV
#   Similar to Pipfile.lock, it is generally recommended to include uv.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#uv.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/latest/usage/project/#working-with-version-control
.pdm.toml
.pdm-python
.pdm-build/

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be found at https://github.com/github/gitignore/blob/main/Global/JetBrains.gitignore
#  and can be added to the global gitignore or merged into this file.  For a more nuclear
#  option (not recommended) you can uncomment the following to ignore the entire idea folder.
#.idea/

# Ruff stuff:
.ruff_cache/

# PyPI configuration file
.pypirc





eval/VLMEvalKit/.idea/

# Byte-compiled / optimized / DLL files
eval/VLMEvalKit/__pycache__/
eval/VLMEvalKit/*.py[cod]
eval/VLMEvalKit/*$py.class

# C extensions
*.so

# Distribution / packaging
eval/VLMEvalKit/.Python
eval/VLMEvalKit/build/
eval/VLMEvalKit/develop-eggs/
eval/VLMEvalKit/dist/
eval/VLMEvalKit/downloads/
eval/VLMEvalKit/eggs/
eval/VLMEvalKit/.eggs/
eval/VLMEvalKit/lib/
eval/VLMEvalKit/lib64/
eval/VLMEvalKit/parts/
eval/VLMEvalKit/sdist/
eval/VLMEvalKit/var/
eval/VLMEvalKit/wheels/
eval/VLMEvalKit/share/python-wheels/
eval/VLMEvalKit/*.egg-info/
eval/VLMEvalKit/.installed.cfg
eval/VLMEvalKit/*.egg
eval/VLMEvalKit/MANIFEST
eval/VLMEvalKit/.vscode/
eval/VLMEvalKit/.gradio/

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
eval/VLMEvalKit/*.manifest
eval/VLMEvalKit/*.spec

# Installer logs
eval/VLMEvalKit/pip-log.txt
eval/VLMEvalKit/pip-delete-this-directory.txt

# Unit test / coverage reports
eval/VLMEvalKit/htmlcov/
eval/VLMEvalKit/.tox/
eval/VLMEvalKit/.nox/
eval/VLMEvalKit/.coverage
eval/VLMEvalKit/.coverage.*
eval/VLMEvalKit/.cache
eval/VLMEvalKit/nosetests.xml
eval/VLMEvalKit/coverage.xml
eval/VLMEvalKit/*.cover
eval/VLMEvalKit/*.py,cover
eval/VLMEvalKit/.hypothesis/
eval/VLMEvalKit/.pytest_cache/
eval/VLMEvalKit/cover/

# Translations
eval/VLMEvalKit/*.mo
eval/VLMEvalKit/*.pot

# Django stuff:
eval/VLMEvalKit/*.log
eval/VLMEvalKit/local_settings.py
eval/VLMEvalKit/db.sqlite3
eval/VLMEvalKit/db.sqlite3-journal

# Flask stuff:
eval/VLMEvalKit/instance/
eval/VLMEvalKit/.webassets-cache

# Scrapy stuff:
eval/VLMEvalKit/.scrapy

# Sphinx documentation
eval/VLMEvalKit/docs/_build/

# PyBuilder
eval/VLMEvalKit/.pybuilder/
eval/VLMEvalKit/target/

# Jupyter Notebook
eval/VLMEvalKit/.ipynb_checkpoints

# IPython
eval/VLMEvalKit/profile_default/
eval/VLMEvalKit/ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/#use-with-ide
eval/VLMEvalKit/.pdm.toml

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
eval/VLMEvalKit/__pypackages__/

# Celery stuff
eval/VLMEvalKit/celerybeat-schedule
eval/VLMEvalKit/celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
eval/VLMEvalKit/.env
eval/VLMEvalKit/.venv
eval/VLMEvalKit/env/
eval/VLMEvalKit/venv/
eval/VLMEvalKit/ENV/
eval/VLMEvalKit/env.bak/
eval/VLMEvalKit/venv.bak/

# Spyder project settings
eval/VLMEvalKit/.spyderproject
eval/VLMEvalKit/.spyproject

# Rope project settings
eval/VLMEvalKit/eval/VLMEvalKit/.ropeproject

# mkdocs documentation
/site

# mypy
eval/VLMEvalKit/.mypy_cache/
eval/VLMEvalKit/.dmypy.json
eval/VLMEvalKit/dmypy.json

# Pyre type checker
eval/VLMEvalKit/.pyre/

# pytype static type analyzer
eval/VLMEvalKit/.pytype/

# Cython debug symbols
eval/VLMEvalKit/cython_debug/

# Images
eval/VLMEvalKit/images/

eval/VLMEvalKit/scripts/*ttf
eval/VLMEvalKit/.history
eval/VLMEvalKit/cache_dir/*

# Evaluation Outputs
eval/VLMEvalKit/outputs/*
eval/VLMEvalKit/demo.ipynb
eval/VLMEvalKit/*json
eval/VLMEvalKit/.vscode
eval/VLMEvalKit/*.swp
eval/VLMEvalKit/GPT4o_MINI/

eval/VLMEvalKit/2weiyun*
eval/VLMEvalKit/script.py
eval/VLMEvalKit/Gemini*
eval/VLMEvalKit/Claude3-5V*
eval/VLMEvalKit/GLM4V*
eval/VLMEvalKit/GPT4o*
eval/VLMEvalKit/GPT4V*
eval/VLMEvalKit/mmmu_debug
eval/VLMEvalKit/bailingMM
eval/VLMEvalKit/BailingMM*
eval/VLMEvalKit/SenseChat*
eval/VLMEvalKit/Step*
eval/VLMEvalKit/DoubaoVL
eval/VLMEvalKit/arch
eval/VLMEvalKit/BlueLM*
eval/VLMEvalKit/mmb_*
eval/VLMEvalKit/Reka*
eval/VLMEvalKit/Taiyi
eval/VLMEvalKit/TeleMM
eval/VLMEvalKit/apple.jpg
eval/VLMEvalKit/assets/LOGO.png
eval/VLMEvalKit/api_list.txt
eval/VLMEvalKit/vlmeval/gemini_tmp.py
eval/VLMEvalKit/outputs_*
